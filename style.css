/* 
You can look into a CSS reset that will give you better/easier css to work from 
like normalize.css https://necolas.github.io/normalize.css/ 
or the New CSS Reset https://elad2412.github.io/the-new-css-reset/ 
it helps with margins, padding, and other stuff that standard html comes with by default.
*/


/* 
I moved a few things around in here just for safety - your CSS should go from most general styles 
to more specific ones as you go down. You might end up with accidental conflicts otherwise. 
You had no isses here, but just FYI.
*/

html{
    font-family: georgia, serif;
    background-color: #6d6466;
    height: 100%;
}

/* 
Could just simplify and reset all margins to 0.
This is a good example of what CSS resets are useful for.
*/

body{
    display: grid;
    grid-template-columns: 182px auto;
    grid-template-rows: 100%;
    margin: 0;
}

/* 
This code creates a "sticky" sidebar header that will always be the height of the veiwport.
Not always necessary but there was some weirdness going on with the height of it on the home page
*/

header{
    background-color: #18191a ;
    display: flex;
    flex-direction: column;
    position: sticky;
    top: 0;
    height: 100vh;
}

header>a{
    color: #867b7d;
    text-decoration: none;
    margin: 15px 20px;
    font-size: .8em;
    margin-left: 25px;
}

/* 
You can also write your margin css in shorthand like I did below.
see: https://www.w3schools.com/css/css_margin.asp
(works for padding, border-radius, and other styles as well)
*/

header>h2{
    font-weight: bold;
    color: #867b7d;
    margin: 15px;
    font-size: 1em;
}

.main{
    margin-left: 25px;
    width: 70%;
}

/* 
Some people might tell you not to use negative margins but I honestly use them all the time 
so I'd be nit-picking if I made a fuss here.
*/

.main>h1{
    margin-left: -10px;
}

/* 
I'm honestly not that good at CSS grid yet. I use flexbox more often but grid is also great, 
it's cool to see you utilize it.
*/

.gallery{
    display: grid;
    grid-template: auto auto / 1fr 1fr 1fr;
}

.sheet{
    height: 250px;
    width: auto;
    margin-top: 15px;
}

figure{
    margin-left: 0px;
}

li{
    margin: 10px;
}

a{
    color: #18191a;
    font-weight: bold;
}

fieldset{
    border: #18191a solid;
    width: 300px;
    text-align: center;
}

input{
    background-color: #6d6466;
    margin: 15px;
    accent-color: #6d6466;
}

textarea{
    background-color: #6d6466;
    border: 1px #18191a solid;
    height: 5em;
    margin-top: 1em;
}

/* 
Checkbox input css is just dumb. Here's one way to do it.
See: https://dev.to/proticm/styling-html-checkboxes-is-super-easy-302o

I had to google this one.
You basically have to strip it of all the styling and rebuild it.
It's probably not worth it most of the time. Even this code is kind of finicky.
But points for style?
*/

.checkbox {
    display: inline-flex;
    cursor: pointer;
    position: relative;
}

.checkbox > span {
    padding: 15px 15px 15px 0;
}

.checkbox > input {
    height: 20px;
    width: 20px;
    -webkit-appearance: none;
    -moz-appearance: none;
    -o-appearance: none;
    appearance: none;
    border: 1px #18191a solid;
    border-radius: 4px;
    outline: none;
    transition-duration: 0.3s;
    background-color: #6d6466;
    cursor: pointer;
  }

.checkbox > input:checked {
    border: 1px solid white;
    background-color: #6d6466;
}

.checkbox > input:checked + span::before {
    content: '\2713';
    display: block;
    text-align: center;
    color: white;
    position: absolute;
    left: 20px;
    top: 16px;
}

.checkbox > input:active {
    border: 1px solid white;
}